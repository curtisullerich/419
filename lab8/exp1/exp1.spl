
composite exp1 {
  graph 
    stream<rstring timestamp, rstring callerid, rstring calleeid, int64 duration> LineStream = FileSource() { 
      param 
      format : csv;
      hasHeaderLine : false;
      defaultTuple : {timestamp = "0", callerid="default", calleeid="default", duration=0l };
      file : getSubmissionTimeValue("file1");
    } 
    stream<rstring timestamp, rstring callerid, rstring calleeid, int64 duration> LineStream = FileSource() { 
      param 
      format : csv;
      hasHeaderLine : false;
      defaultTuple : {timestamp = "0", callerid="default", calleeid="default", duration=0l };
      file : getSubmissionTimeValue("file2");
    } 
   
    stream<rstring id, rstring type> Output = Custom(LineStream) {
      logic
        state: {
          type callerToCalleeWithCountMap = map<rstring, map<rstring, int64>>;
          type hourToCallerWithCountMap = map<rstring, map<rstring, int64>>;
          //map<caller id, map<callee id, int count>>
          //map<hour, map<caller id, int count>>//of less than 10 
          callertoCalleeWithCountMap abcounter;
          hourToCallerWithCountMap ccounter;

        }
        onTuple LineStream : {
          
          submit({id}, Output);
        }
    }

    () as File = FileSink(Output) {
      param file : "supects.txt";
      format : csv;
    }
}
